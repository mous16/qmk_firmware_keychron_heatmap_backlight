name: CI Builds

permissions:
  contents: read

on:
  push:
<<<<<<< HEAD
    branches:
    - master
    - develop

jobs:
  ci_builds:
=======
    branches: [master, develop]
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        description: 'Branch to build'
        options: [master, develop]

concurrency: ci_build-${{ github.event.inputs.branch || github.ref_name }}

jobs:
  ci_builds:
    if: github.repository == 'qmk/qmk_firmware'
>>>>>>> remotes/QMK/develop
    name: "CI Build"
    runs-on: self-hosted
    timeout-minutes: 1380

<<<<<<< HEAD
    if: github.repository == 'qmk/qmk_firmware'

    strategy:
      matrix:
        keymap: [default, via]
        keyboard_folder: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]

    container: qmkfm/qmk_cli
=======
    strategy:
      fail-fast: false
      matrix:
        keymap: [default, via]

    container: ghcr.io/qmk/qmk_cli
>>>>>>> remotes/QMK/develop

    steps:
    - name: Disable safe.directory check
      run : git config --global --add safe.directory '*'

<<<<<<< HEAD
    - uses: actions/checkout@v3
      with:
        submodules: recursive
=======
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: ${{ github.event.inputs.branch || github.ref }}
>>>>>>> remotes/QMK/develop

    - name: Install dependencies
      run: pip3 install -r requirements.txt

<<<<<<< HEAD
    - name: Run `qmk mass-compile` (keyboards ${{ matrix.keyboard_folder }}*, keymap ${{ matrix.keymap }})
      run: qmk mass-compile -j $(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || getconf _NPROCESSORS_ONLN 2>/dev/null) -km ${{ matrix.keymap }} -f 'keyboard_folder=${{ matrix.keyboard_folder }}*'

    - name: 'Upload binaries'
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.keyboard_folder }}-${{ matrix.keymap }}
=======
    - name: Run `qmk mass-compile` (keymap ${{ matrix.keymap }})
      run: |
        export NCPUS=$(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || getconf _NPROCESSORS_ONLN 2>/dev/null)
        qmk mass-compile -t -j $NCPUS -km ${{ matrix.keymap }} -e DUMP_CI_METADATA=yes || touch .failed
        # Generate the step summary markdown
        ./util/ci/generate_failure_markdown.sh > $GITHUB_STEP_SUMMARY || true
        # Truncate to a maximum of 1MB to deal with GitHub workflow limit
        truncate --size='<960K' $GITHUB_STEP_SUMMARY || true
        # Exit with failure if the compilation stage failed
        [ ! -f .failed ] || exit 1

    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: artifacts-${{ github.event.inputs.branch || github.ref_name }}-${{ matrix.keymap }}
>>>>>>> remotes/QMK/develop
        if-no-files-found: ignore
        path: |
          *.bin
          *.hex
          *.uf2
<<<<<<< HEAD
=======
          .build/failed.*

    - name: 'CI Discord Notification'
      if: always()
      working-directory: util/ci/
      env:
        DISCORD_WEBHOOK: ${{ secrets.CI_DISCORD_WEBHOOK }}
      run: |
        python3 -m pip install -r requirements.txt
        python3 ./discord-results.py --branch ${{ github.event.inputs.branch || github.ref_name }} --keymap ${{ matrix.keymap }} --url ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
>>>>>>> remotes/QMK/develop
